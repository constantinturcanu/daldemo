/*
 * This file is generated by jOOQ.
 */
package dal.jooq.entities.tables;


import dal.jooq.entities.Employees;
import dal.jooq.entities.Keys;
import dal.jooq.entities.tables.records.TitlesRecord;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Titles extends TableImpl<TitlesRecord> {

    private static final long serialVersionUID = -1155481271;

    /**
     * The reference instance of <code>employees.titles</code>
     */
    public static final Titles TITLES = new Titles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TitlesRecord> getRecordType() {
        return TitlesRecord.class;
    }

    /**
     * The column <code>employees.titles.emp_no</code>.
     */
    public final TableField<TitlesRecord, Integer> EMP_NO = createField(DSL.name("emp_no"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>employees.titles.title</code>.
     */
    public final TableField<TitlesRecord, String> TITLE = createField(DSL.name("title"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>employees.titles.from_date</code>.
     */
    public final TableField<TitlesRecord, LocalDate> FROM_DATE = createField(DSL.name("from_date"), org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>employees.titles.to_date</code>.
     */
    public final TableField<TitlesRecord, LocalDate> TO_DATE = createField(DSL.name("to_date"), org.jooq.impl.SQLDataType.LOCALDATE.defaultValue(DSL.inline("NULL", org.jooq.impl.SQLDataType.LOCALDATE)), this, "");

    /**
     * Create a <code>employees.titles</code> table reference
     */
    public Titles() {
        this(DSL.name("titles"), null);
    }

    /**
     * Create an aliased <code>employees.titles</code> table reference
     */
    public Titles(String alias) {
        this(DSL.name(alias), TITLES);
    }

    /**
     * Create an aliased <code>employees.titles</code> table reference
     */
    public Titles(Name alias) {
        this(alias, TITLES);
    }

    private Titles(Name alias, Table<TitlesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Titles(Name alias, Table<TitlesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Titles(Table<O> child, ForeignKey<O, TitlesRecord> key) {
        super(child, key, TITLES);
    }

    @Override
    public Schema getSchema() {
        return Employees.EMPLOYEES;
    }

    @Override
    public UniqueKey<TitlesRecord> getPrimaryKey() {
        return Keys.KEY_TITLES_PRIMARY;
    }

    @Override
    public List<UniqueKey<TitlesRecord>> getKeys() {
        return Arrays.<UniqueKey<TitlesRecord>>asList(Keys.KEY_TITLES_PRIMARY);
    }

    @Override
    public List<ForeignKey<TitlesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TitlesRecord, ?>>asList(Keys.TITLES_IBFK_1);
    }

    public dal.jooq.entities.tables.Employees employees() {
        return new dal.jooq.entities.tables.Employees(this, Keys.TITLES_IBFK_1);
    }

    @Override
    public Titles as(String alias) {
        return new Titles(DSL.name(alias), this);
    }

    @Override
    public Titles as(Name alias) {
        return new Titles(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Titles rename(String name) {
        return new Titles(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Titles rename(Name name) {
        return new Titles(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, LocalDate, LocalDate> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
