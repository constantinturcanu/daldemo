/*
 * This file is generated by jOOQ.
 */
package dal.jooq.entities;


import dal.jooq.entities.tables.Departments;
import dal.jooq.entities.tables.DeptEmp;
import dal.jooq.entities.tables.DeptManager;
import dal.jooq.entities.tables.Employees;
import dal.jooq.entities.tables.Salaries;
import dal.jooq.entities.tables.Titles;
import dal.jooq.entities.tables.records.DepartmentsRecord;
import dal.jooq.entities.tables.records.DeptEmpRecord;
import dal.jooq.entities.tables.records.DeptManagerRecord;
import dal.jooq.entities.tables.records.EmployeesRecord;
import dal.jooq.entities.tables.records.SalariesRecord;
import dal.jooq.entities.tables.records.TitlesRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>employees</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DepartmentsRecord> KEY_DEPARTMENTS_PRIMARY = UniqueKeys0.KEY_DEPARTMENTS_PRIMARY;
    public static final UniqueKey<DepartmentsRecord> KEY_DEPARTMENTS_DEPT_NAME = UniqueKeys0.KEY_DEPARTMENTS_DEPT_NAME;
    public static final UniqueKey<DeptEmpRecord> KEY_DEPT_EMP_PRIMARY = UniqueKeys0.KEY_DEPT_EMP_PRIMARY;
    public static final UniqueKey<DeptManagerRecord> KEY_DEPT_MANAGER_PRIMARY = UniqueKeys0.KEY_DEPT_MANAGER_PRIMARY;
    public static final UniqueKey<EmployeesRecord> KEY_EMPLOYEES_PRIMARY = UniqueKeys0.KEY_EMPLOYEES_PRIMARY;
    public static final UniqueKey<SalariesRecord> KEY_SALARIES_PRIMARY = UniqueKeys0.KEY_SALARIES_PRIMARY;
    public static final UniqueKey<TitlesRecord> KEY_TITLES_PRIMARY = UniqueKeys0.KEY_TITLES_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<DeptEmpRecord, EmployeesRecord> DEPT_EMP_IBFK_1 = ForeignKeys0.DEPT_EMP_IBFK_1;
    public static final ForeignKey<DeptEmpRecord, DepartmentsRecord> DEPT_EMP_IBFK_2 = ForeignKeys0.DEPT_EMP_IBFK_2;
    public static final ForeignKey<DeptManagerRecord, EmployeesRecord> DEPT_MANAGER_IBFK_1 = ForeignKeys0.DEPT_MANAGER_IBFK_1;
    public static final ForeignKey<DeptManagerRecord, DepartmentsRecord> DEPT_MANAGER_IBFK_2 = ForeignKeys0.DEPT_MANAGER_IBFK_2;
    public static final ForeignKey<SalariesRecord, EmployeesRecord> SALARIES_IBFK_1 = ForeignKeys0.SALARIES_IBFK_1;
    public static final ForeignKey<TitlesRecord, EmployeesRecord> TITLES_IBFK_1 = ForeignKeys0.TITLES_IBFK_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 {
        public static final UniqueKey<DepartmentsRecord> KEY_DEPARTMENTS_PRIMARY = Internal.createUniqueKey(Departments.DEPARTMENTS, "KEY_departments_PRIMARY", new TableField[] { Departments.DEPARTMENTS.DEPT_NO }, true);
        public static final UniqueKey<DepartmentsRecord> KEY_DEPARTMENTS_DEPT_NAME = Internal.createUniqueKey(Departments.DEPARTMENTS, "KEY_departments_dept_name", new TableField[] { Departments.DEPARTMENTS.DEPT_NAME }, true);
        public static final UniqueKey<DeptEmpRecord> KEY_DEPT_EMP_PRIMARY = Internal.createUniqueKey(DeptEmp.DEPT_EMP, "KEY_dept_emp_PRIMARY", new TableField[] { DeptEmp.DEPT_EMP.EMP_NO, DeptEmp.DEPT_EMP.DEPT_NO }, true);
        public static final UniqueKey<DeptManagerRecord> KEY_DEPT_MANAGER_PRIMARY = Internal.createUniqueKey(DeptManager.DEPT_MANAGER, "KEY_dept_manager_PRIMARY", new TableField[] { DeptManager.DEPT_MANAGER.EMP_NO, DeptManager.DEPT_MANAGER.DEPT_NO }, true);
        public static final UniqueKey<EmployeesRecord> KEY_EMPLOYEES_PRIMARY = Internal.createUniqueKey(Employees.EMPLOYEES_, "KEY_employees_PRIMARY", new TableField[] { Employees.EMPLOYEES_.EMP_NO }, true);
        public static final UniqueKey<SalariesRecord> KEY_SALARIES_PRIMARY = Internal.createUniqueKey(Salaries.SALARIES, "KEY_salaries_PRIMARY", new TableField[] { Salaries.SALARIES.EMP_NO, Salaries.SALARIES.FROM_DATE }, true);
        public static final UniqueKey<TitlesRecord> KEY_TITLES_PRIMARY = Internal.createUniqueKey(Titles.TITLES, "KEY_titles_PRIMARY", new TableField[] { Titles.TITLES.EMP_NO, Titles.TITLES.TITLE, Titles.TITLES.FROM_DATE }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<DeptEmpRecord, EmployeesRecord> DEPT_EMP_IBFK_1 = Internal.createForeignKey(Keys.KEY_EMPLOYEES_PRIMARY, DeptEmp.DEPT_EMP, "dept_emp_ibfk_1", new TableField[] { DeptEmp.DEPT_EMP.EMP_NO }, true);
        public static final ForeignKey<DeptEmpRecord, DepartmentsRecord> DEPT_EMP_IBFK_2 = Internal.createForeignKey(Keys.KEY_DEPARTMENTS_PRIMARY, DeptEmp.DEPT_EMP, "dept_emp_ibfk_2", new TableField[] { DeptEmp.DEPT_EMP.DEPT_NO }, true);
        public static final ForeignKey<DeptManagerRecord, EmployeesRecord> DEPT_MANAGER_IBFK_1 = Internal.createForeignKey(Keys.KEY_EMPLOYEES_PRIMARY, DeptManager.DEPT_MANAGER, "dept_manager_ibfk_1", new TableField[] { DeptManager.DEPT_MANAGER.EMP_NO }, true);
        public static final ForeignKey<DeptManagerRecord, DepartmentsRecord> DEPT_MANAGER_IBFK_2 = Internal.createForeignKey(Keys.KEY_DEPARTMENTS_PRIMARY, DeptManager.DEPT_MANAGER, "dept_manager_ibfk_2", new TableField[] { DeptManager.DEPT_MANAGER.DEPT_NO }, true);
        public static final ForeignKey<SalariesRecord, EmployeesRecord> SALARIES_IBFK_1 = Internal.createForeignKey(Keys.KEY_EMPLOYEES_PRIMARY, Salaries.SALARIES, "salaries_ibfk_1", new TableField[] { Salaries.SALARIES.EMP_NO }, true);
        public static final ForeignKey<TitlesRecord, EmployeesRecord> TITLES_IBFK_1 = Internal.createForeignKey(Keys.KEY_EMPLOYEES_PRIMARY, Titles.TITLES, "titles_ibfk_1", new TableField[] { Titles.TITLES.EMP_NO }, true);
    }
}
